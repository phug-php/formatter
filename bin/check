#!/usr/bin/php
<?php

//The PHP version this is running in
$phpVersion = isset($argv[1]) ? $argv[1] : PHP_VERSION;
$isHhvm = strpos($phpVersion, 'hhvm') !== false || defined('HHVM_VERSION');
$mode = isset($argv[2]) ? $argv[2] : 'validate';

//Mode: validate
$commands = [
    ['phpunit', '--coverage-text']
];

//If not HHVM
if (!$isHhvm) {
    $commands[] = ['phpcs'];
    $commands[] = ['php', 'bin/check-coverage'];
}

//Mode: install
if ($mode === 'install') {

    $commands = [
        ['composer', 'self-update'],
        ['composer', 'install']
    ];

    //If not HHVM
    if (!$isHhvm) {

        $commands[] = ['pear', 'config-set', 'auto_discover', 1];
        $commands[] = ['pear', 'channel-update', 'pear.php.net'];
        $commands[] = ['pear', 'install', 'PHP_CodeSniffer'];
        $commands[] = ['phpenv', 'rehash'];
    }
}

if ($mode === 'install')
    echo "Installing dependencies (PHP Version: $phpVersion)", PHP_EOL;
else
    echo "Validating build (PHP Version: $phpVersion)...", PHP_EOL;

//Switch to root directory
chdir(dirname(__DIR__));

$code = true;
foreach ($commands as $command) {

    $cmd = implode(' ', $command);

    //Don't run phpcs on HHVM (Can't install via PEAR)
    if (strncmp($phpVersion, 'hhvm', 4) === 0 && in_array($command[0], ['phpcs']))
        continue;

    echo "Running: $ $cmd", PHP_EOL;
    //Run the command, fetch return code
    passthru($cmd, $code);

    //Check return code
    if ($mode !== 'install' && $code !== 0) {

        echo "Validation: FAILED ($code)", PHP_EOL;
        exit(1);
    }
}

if ($mode === 'install')
    echo "Installation complete.", PHP_EOL;
else
    echo "Validation: SUCCESS!", PHP_EOL;

//All done